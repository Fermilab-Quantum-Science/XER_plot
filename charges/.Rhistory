e1 <- e1 %>% mutate(n=node-nodemin, o=other-nodemin)
nodemax <- max(e1$n)
s <- sparseMatrix(i=e1$n,j=e1$o,x=e1$weight, dims=c(nodemax,nodemax))
#, triangular=TRUE)
# set diagonal to zeros
clus <- hclust(as.dist(s), method="single")
gap_stat <- clusGap(as.matrix(s), FUN=kmeans, nstart = 25, K.max = 12, B = 50)
fviz_gap_stat(gap_stat)
cutree(as.hclust(clus),k=3)
plot(clus)
e1 <- filter(events,evt==4)
# move node numbers (and other) to start at 1
nodemin <- min(e1$node)-1
e1 <- e1 %>% mutate(n=node-nodemin, o=other-nodemin)
nodemax <- max(e1$n)
s <- sparseMatrix(i=e1$n,j=e1$o,x=e1$weight, dims=c(nodemax,nodemax))
#, triangular=TRUE)
# set diagonal to zeros
clus <- hclust(as.dist(s), method="single")
gap_stat <- clusGap(as.matrix(s), FUN=hcut, nstart = 25, K.max = 12, B = 50)
fviz_gap_stat(gap_stat)
cutree(as.hclust(clus),k=3)
plot(clus)
e1 <- filter(events,evt==4)
# move node numbers (and other) to start at 1
nodemin <- min(e1$node)-1
e1 <- e1 %>% mutate(n=node-nodemin, o=other-nodemin)
nodemax <- max(e1$n)
s <- sparseMatrix(i=e1$n,j=e1$o,x=e1$weight, dims=c(nodemax,nodemax))
#, triangular=TRUE)
# set diagonal to zeros
clus <- hclust(as.dist(s), method="single")
gap_stat <- clusGap(as.matrix(s), FUN=hcut, nstart = 25, K.max = 12, B = 50)
fviz_gap_stat(gap_stat)
cutree(as.hclust(clus),k=5)
plot(clus)
e1 <- filter(events,evt==4)
# move node numbers (and other) to start at 1
nodemin <- min(e1$node)-1
e1 <- e1 %>% mutate(n=node-nodemin, o=other-nodemin)
nodemax <- max(e1$n)
s <- sparseMatrix(i=e1$n,j=e1$o,x=e1$weight, dims=c(nodemax,nodemax))
#, triangular=TRUE)
# set diagonal to zeros
clus <- hclust(as.dist(s), method="single")
gap_stat <- clusGap(as.matrix(s), FUN=hcut, nstart = 25, K.max = 12, B = 50)
fviz_gap_stat(gap_stat)
cutree(as.hclust(clus),k=3)
plot(clus)
pnorm(c(-1,1),0,1)
pnorm(1,0,1)
qnorm(1,0,1)
pnorm(1,0,1)
pnorm(.5,0,1)
pnorm(1)
pnorm(1)-pnorm(-1)
?rlang
library(rlang)
?rlang
log(x-1)
log(-1)
log(-2)
log(.1)
log(1)
plot(1:10)
plot(1:10:.1)
plot(1:.1:10)
plot(seq(1,10,by=.1))
a<-seq(1,10,by=.1)
plot(a,log(a))
a<-seq(1,30,by=.1)
plot(a,log(a))
a<-seq(1,300,by=.5)
plot(a,log(a))
library(tidyverse)
library(ggplot2)
library(rgl)
library(scatterplot3d)
ct <- read.csv("ct.csv")
slt<- read.csv("slt.csv")
ct %>% filter(child==277)
ct %>% filter(parent==277)
ct %>% filter(parent==279)
ct %>% filter(parent==285
)
ct %>% filter(parent==291)
ct %>% filter(parent==244)
ct %>% filter(child==244)
ct %>% filter(child_size==1) %>% group_by(parent) %>% summarise(c=count(parent))
ct %>% filter(child_size==1) %>% group_by(parent) %>% summarise(c=n(parent))
ct %>% filter(child_size==1) %>% group_by(parent) %>% summarise(c=n())
install.packages("ggplot2")
install.packages("tidyverse")
q()
install.packages("xlsx")
install.packages("readxl")
dir()
library(xlsx)
library(readxl)
read_excel('Krono')
getwd()
exit()
quit()
View(clus)
View(e1)
library(tidyverse)
library(ggplot2)
library(readxl)
c1 <- read_excel('../../Kronos Summary Report (By Task)_Q1903_20230205.xlsx')
getwd()
getwd()
setwd('MAGIS-100/')
setwd('read_stuff/charges/')
c1 <- read_excel('../../Kronos Summary Report (By Task)_Q1903_20230205.xlsx')
library(tidyverse)
library(ggplot2)
library(readxl)
c1 <- read_excel('../../Kronos Summary Report (By Task)_Q1903_20230205.xlsx')
c2 <- read_excel('../../Kronos Summary Report (By Task)_Q1903_20230130.xlsx')
c1 <- read_excel('../../Kronos Summary Report (By Task)_Q1903_20230205.xlsx',skip=1)
c2 <- read_excel('../../Kronos Summary Report (By Task)_Q1903_20230130.xlsx',skip=1)
#c1 <- read_excel('../../Kronos Summary Report (By Task)_Q1903_20230205.xlsx',skip=1)
c2 <- read_excel('../../Kronos Summary Report (By Task)_Q1903_20230130.xlsx',skip=1)
?read_excel
dup(2,5)
dup()
dupl()
rep(2,5)
rep(2,5)[2]=5
tmp.r<-rep(2,5)
tmp.r[2]=7
tmp.r
chg.cols = rep('guess',32)
chg.cols[1]='text'
chg.cols[2]='text'
chg.cols[18]='text'
#c1 <- read_excel('../../Kronos Summary Report (By Task)_Q1903_20230205.xlsx', col_types=chg.cols)
c2 <- read_excel('../../Kronos Summary Report (By Task)_Q1903_20230130.xlsx', col_types=chg.cols)
chg.cols = rep('guess',32)
chg.cols[1]='text'
chg.cols[2]='text'
chg.cols[18]='text'
#c1 <- read_excel('../../Kronos Summary Report (By Task)_Q1903_20230205.xlsx', col_types=chg.cols)
c2 <- read_excel('../../Kronos Summary Report (By Task)_Q1903_20230130.xlsx', col_types=chg.cols)
chg.cols = rep('guess',32)
chg.cols[1]='text'
chg.cols[2]='text'
chg.cols[18]='text'
c1 <- read_excel('../../Kronos Summary Report (By Task)_Q1903_20230205.xlsx', col_types=chg.cols)
c2 <- read_excel('../../Kronos Summary Report (By Task)_Q1903_20230130.xlsx', col_types=chg.cols)
head(c1)
colnames(c1)
coltypes()
typeof(c1$Hours)
typeof(c1$`Timecard End`)
typeof(c1$`Timecard Start`)
chg.cols = rep('guess',32)
chg.cols[1]='text'
chg.cols[2]='text'
chg.cols[18]='text'
c1 <- read_excel('../../Kronos Summary Report (By Task)_Q1903_20230205.xlsx', col_types=chg.cols)
c2 <- read_excel('../../Kronos Summary Report (By Task)_Q1903_20230130.xlsx', col_types=chg.cols)
chg.cols = rep('guess',32)
chg.cols[1]='text'
chg.cols[2]='text'
chg.cols[18]='text'
c1 <- read_excel('../../Kronos Summary Report (By Task)_Q1903_20230205.xlsx', col_types=chg.cols)
c2 <- read_excel('../../Kronos Summary Report (By Task)_Q1903_20230130.xlsx', col_types=chg.cols)
all.charges <- bind_rows(c1,c2)
nrow(c1)
nrow(c2)
nrow(all.charges)
?aggregate
?summarise
?group_by
?summarise
p <- group_by(all.charges, 'Task Name') %>% summarise(cs=cumsum(Hours))
?reframe
head(p)
colnames(all.charges)
table(all.charges$`Task Name`)
all.charges[[1]]
all.charges[1]
all.charges[1,]
p[1,]
p
p <- all.charges %>% group_by('Task Name') %>% summarise(cs=cumsum(Hours))
p[1,]
?group_by
p <- all.charges %>% group_by(Task\ Name) %>% summarise(cs=cumsum(Hours))
chg.cols = rep('guess',32)
chg.cols[1]='text'
chg.cols[2]='text'
chg.cols[18]='text'
c1 <- read_excel('../../Kronos Summary Report (By Task)_Q1903_20230205.xlsx', col_types=chg.cols)
c2 <- read_excel('../../Kronos Summary Report (By Task)_Q1903_20230130.xlsx', col_types=chg.cols)
chg.cols = rep('guess',32)
chg.cols[1]='text'
chg.cols[2]='text'
chg.cols[18]='text'
c1 <- read_excel('../../Kronos Summary Report (By Task)_Q1903_20230205.xlsx', col_types=chg.cols)
c2 <- read_excel('../../Kronos Summary Report (By Task)_Q1903_20230130.xlsx', col_types=chg.cols)
all.charges <- bind_rows(c1,c2)
p <- all.charges %>% group_by(tn="Task Name") %>% summarise(cs=cumsum(Hours))
p <- all.charges %>% group_by(tn="Task Name") %>% summarise(cs=cumsum(Hours))
p
make.names(colnames(all.charges))
chg.cols = rep('guess',32)
chg.cols[1]='text'
chg.cols[2]='text'
chg.cols[18]='text'
c1 <- read_excel('../../Kronos Summary Report (By Task)_Q1903_20230205.xlsx', col_types=chg.cols)
c2 <- read_excel('../../Kronos Summary Report (By Task)_Q1903_20230130.xlsx', col_types=chg.cols)
all.charges <- bind_rows(c1,c2)
names(all.charges) <- make.names(colnames(all.charges))
p <- all.charges %>% group_by(tn="Task Name") %>% summarise(cs=cumsum(Hours))
head(all.charges)
head(p)
p
p[2000,]
p[5000,]
p <- all.charges %>% group_by(tn="Task.Name") %>% summarise(cs=sum(Hours))
head(p)
p
p
p <- all.charges %>% group_by("Task.Name") %>% summarise(cs=sum(Hours))
head(p)
p
all.charges['Task.Name']
p <- all.charges %>% group_by(Task.Name) %>% summarise(cs=sum(Hours))
p
p <- all.charges %>% group_by(Task.Name) %>% summarise(cs=cumsum(Hours))
p
p <- all.charges %>% group_by(Task.Name) %>% summarise(cs=sum(Hours))
p <- all.charges %>% group_by(Task.Name) %>% summarise(cs=sum(Hours))
p
colnames(all.charges)
head(all.charges$Timecard.End)
all.charges$Timecard.End
typeof(all.charges$Timecard.End)
all.charges$Timecard.End + 2
all.charges$Timecard.End + 3
typeof(all.charges$Timecard.End[[0]])
typeof(all.charges$Timecard.End[0])
all.charges$Timecard.End[1] + 3
all.charges$Timecard.End[1]
typeof(all.charges$Timecard.End[1])
all.charges$Timecard.End[2]-all.charges$Timecard.End[1]
all.charges$Timecard.End[12]-all.charges$Timecard.End[1]
all.charges$Timecard.End[62]-all.charges$Timecard.End[1]
months(all.charges$Timecard.End[2])
months(all.charges$Timecard.End[32])
months(all.charges$Timecard.End[132])
?months
julian(all.charges$Timecard.End[132])
julian(all.charges$Timecard.End[132])
julian(all.charges$Timecard.End[1])
names(all.charges$Timecard.End)
names(all.charges$Timecard.End[1])
all.charges$Timecard.End[1]
month.name
names(all.charges)
as.POSIXct(all.charges$Timecard.End[1])
as.POSIXct(all.charges$Timecard.End[1])$year
as.POSIXlt(all.charges$Timecard.End[1])$year
as.POSIXlt(all.charges$Timecard.End[1])
as.POSIXlt(all.charges$Timecard.End[1])$month
unlist(as.POSIXlt(all.charges$Timecard.End[1]))$month
unlist(as.POSIXlt(all.charges$Timecard.End[1]))
all.charges$Timecard.End[1]
all.charges$Timecard.End[5001]
unlist(as.POSIXlt(all.charges$Timecard.End[5001]))
all.charges %>% mutate(cs=cumsum())
all.charges %>% mutate(cs=cumsum(Hours))
cumsum(c(6,3,7,4,3))
unlist(as.POSIXlt(all.charges$Timecard.End))
unlist(as.POSIXlt(all.charges$Timecard.End)$year)
ext.ym <- function(x)
{
tmp<-unlist(as.POSIXlt(x))
c(tmp$year,tmp$mon)
}
all.charges %>% mutate(ym=ext.ym(Timecard.Start))
ext.ym <- function(x)
{
tmp<-unlist(as.POSIXlt(x))
list(tmp$year,tmp$mon)
}
all.charges %>% mutate(ym=ext.ym(Timecard.Start))
unlist(as.POSIXlt(all.charges$Timecard.End)$year)
ext.ym <- function(x)
{
tmp<-unlist(as.POSIXlt(x))
#(tmp$year,tmp$mon)
tmp$year
}
all.charges %>% mutate(ym=ext.ym(Timecard.Start))
as.POSIXlt(all.charges$Timecard.End)$year
ext.ym <- function(x)
{
tmp<-as.POSIXlt(x)
#(tmp$year,tmp$mon)
list(tmp$year,tmp$mon)
}
all.charges %>% mutate(ym=ext.ym(Timecard.Start))
ext.ym <- function(x)
{
tmp<-as.POSIXlt(x)
#(tmp$year,tmp$mon)
#list(tmp$year,tmp$mon)
cumsum(tmp$year)
}
all.charges %>% mutate(ym=ext.ym(Timecard.Start))
names(all.charges)
?transmute
?mutate
?mutate
ext.ym <- function(x)
{
tmp<-as.POSIXlt(x)
#(tmp$year,tmp$mon)
#list(tmp$year,tmp$mon)
cumsum(tmp$year)
}
names(all.charges %>% mutate(ym=ext.ym(Timecard.Start)))
ext.ym <- function(x)
{
tmp<-as.POSIXlt(x)
#(tmp$year,tmp$mon)
#list(tmp$year,tmp$mon)
cumsum(tmp$year)
}
names(all.charges %>% mutate(ym=ext.ym(Timecard.Start)))$ym
list(a=c(1,2),b=(5,6))
list(c(1,2),c(5,6))
list(c(1,2),b=c(5,6))
list(a=c(1,2),b=c(5,6))
ext.ym <- function(x)
{
tmp<-as.POSIXlt(x)
#(tmp$year,tmp$mon)
list(year=tmp$year,month=tmp$mon)
}
all.charges %>% mutate(ym=pmap(Timecard.start),ext.ym)
names(all.charges)
ext.ym <- function(x)
{
tmp<-as.POSIXlt(x)
#(tmp$year,tmp$mon)
list(year=tmp$year,month=tmp$mon)
}
all.charges %>% mutate(ym=pmap(Timecard.Start),ext.ym)
ext.ym <- function(x)
{
tmp<-as.POSIXlt(x)
#(tmp$year,tmp$mon)
list(year=tmp$year,month=tmp$mon)
}
all.charges %>% mutate(ym=pmap(list(Timecard.Start),ext.ym))
ext.ym <- function(x)
{
tmp<-as.POSIXlt(x)
#(tmp$year,tmp$mon)
list(year=tmp$year,month=tmp$mon)
}
names(all.charges %>% mutate(ym=pmap(list(Timecard.Start),ext.ym)))
tmp<-as.POSIXlt(x)
tmp<-as.POSIXlt(all.charges$Timecard.Start)
all.charges <- all.charges %>% mutate(year=tmp$year,month=tmp$mon)
all.charges$year
p <- all.charges %>% group_by(Task.Name, year, month) %>% summarise(cs=sum(Hours))
head(p)
p <- all.charges %>% group_by(Task.Name, year) %>% arange(month) %>% summarise(cs=cumsum(Hours))
?arrange
p <- all.charges %>% group_by(Task.Name, year) %>% arrange(month) %>% summarise(cs=cumsum(Hours))
head(p)
p <- all.charges %>% group_by(Task.Name, year, month) %>% mutate(msum=sum(Hours))
p <- all.charges %>% group_by(Task.Name, year) %>% arrange(month) %>% mutate(cs=cumsum(Hours))
head(p)
#p <- all.charges %>% group_by(Task.Name, year, month) %>% summarise(msum=sum(Hours))
p <- all.charges %>% group_by(Task.Name, year) %>% arrange(month) %>% mutate(cs=cumsum(Hours))
head(p)
p <- all.charges %>% group_by(Task.Name, year, month) %>% summarise(msum=sum(Hours))
p <- all.charges %>% group_by(Task.Name, year) %>% arrange(month) %>% mutate(cs=cumsum(Hours))
head(p)
colnames(p)
p <- all.charges %>% group_by(Task.Name, year, month) %>% summarise(msum=sum(Hours))
#p <- all.charges %>% group_by(Task.Name, year) %>% arrange(month) %>% mutate(cs=cumsum(Hours))
head(p)
p <- all.charges %>% group_by(Task.Name, year, month) %>% summarise(msum=sum(Hours))
p <- p %>% group_by(Task.Name, year) %>% arrange(month) %>% mutate(cs=cumsum(Hours))
p <- all.charges %>% group_by(Task.Name, year, month) %>% summarise(msum=sum(Hours))
#p <- p %>% group_by(Task.Name, year) %>% arrange(month) %>% mutate(cs=cumsum(Hours))
head(p)
p <- all.charges %>% group_by(Task.Name, year, month) %>% summarise(msum=sum(Hours))
p <- p %>% group_by(Task.Name, year) %>% mutate(cs=cumsum(Hours))
p <- all.charges %>% group_by(Task.Name, year, month) %>% summarise(Hours=sum(Hours))
p <- p %>% group_by(Task.Name, year) %>% mutate(cs=cumsum(Hours))
head(p)
g <- ggplot(p, aes(month,cs)) + geom_point() + facet_grid(rows=vars(year))
g <- ggplot(p, aes(month,cs)) + geom_point() + facet_grid(rows=vars(year))
g <- ggplot(p, aes(month,cs)) + geom_point() + facet_grid(rows=vars(year))
print(g)
g <- ggplot(p, aes(month,cs)) + geom_line()
print(g  + facet_grid(vars(Tank.Name),vars(year)))
names(p)
g <- ggplot(p, aes(month,cs)) + geom_line()
print(g  + facet_grid(vars(Task.Name),vars(year)))
tmp<-as.POSIXlt(all.charges$Timecard.Start)
all.charges <- all.charges %>% mutate(year=tmp$year-100+2000,month=tmp$mon)
p <- all.charges %>% group_by(Task.Name, year, month) %>% summarise(Hours=sum(Hours))
p <- p %>% group_by(Task.Name, year) %>% mutate(cs=cumsum(Hours))
g <- ggplot(p, aes(month,cs)) + geom_line()
print(g  + facet_grid(vars(Task.Name),vars(year)))
filter(p,year==2023)
g <- ggplot(p, aes(month,cs)) + geom_point()
print(g  + facet_grid(vars(Task.Name),vars(year)))
filter(p,year==2021)
filter(p,year==2021)
names(all.charges)
table(all.charges$Function.Role)
table(all.charges$Function.Category)
g <- ggplot(p, aes(month,cs)) + geom_point()
print(g  + facet_grid(vars(Function.Category),vars(year)))
head(p)
p2 <- all.charges %>% group_by(Function.Category, year, month) %>% summarise(Hours=sum(Hours))
p2 <- p2 %>% group_by(Function.Category, year) %>% mutate(cs=cumsum(Hours))
g2 <- ggplot(p2, aes(month,cs)) + geom_point()
print(g2  + facet_grid(vars(Function.Category),vars(year)))
?ggplot
?aes
?ggsave
g <- ggplot(p, aes(month,cs)) + geom_point()
g <- g  + facet_grid(vars(Task.Name),vars(year))
print(g)
ggsave(g, filename="hoursbyyearbytask.pdf",units="in", height=10, device="pdf")
p2 <- all.charges %>% group_by(Function.Category, year, month) %>% summarise(Hours=sum(Hours))
p2 <- p2 %>% group_by(Function.Category, year) %>% mutate(cs=cumsum(Hours))
g2 <- ggplot(p2, aes(month,cs)) + geom_point()
g2 <- g2  + facet_grid(vars(Function.Category),vars(year))
print(g2)
ggsave(g2, filename="hoursbyyearbyfunction.pdf",units="in", height=10, device="pdf")
b1 <- read_excel('../../MAGIS FY23 Budget for cuts v8.xlsx')
b1 <- read_excel('../../MAGIS FY23 Budget for cuts v8.xlsx')
names(b1)
?read_excel
b1 <- read_excel('../../MAGIS FY23 Budget for cuts v8.xlsx', sheet='Data Entry')
names(b1)
b1 <- read_excel('../../MAGIS FY23 Budget for cuts v8.xlsx', sheet='Data Entry', skip=1)
names(b1)
head(b1)
names(b1)
b1$Notes
table(b1$Notes)
b1$Notes
names(b1) <- make.names(colnames(b1))
names(b1)
head(b1$Activity)
head(b1(Notes))
head(b1$Notes)
head(b1$Task...Name)
head(b1$Task.Number)
?cut
?split
?paste
strsplit('12.15.16','.')
strsplit('12.15.16','[.]')
b1$Notes
strsplit(b1$Notes,' ')
unlist(strsplit(b1$Notes,' '))
unlist(strsplit(b1$Notes,' ')[1])
unlist(strsplit(b1$Notes,' ')[,1])
unlist(strsplit(b1$Notes,' '))
unlist(strsplit(b1$Notes,';'))
hours.by.task <- all.charges %>% group_by(Task.Name, year, month) %>% summarise(Hours=sum(Hours))
hours.by.task <- hours.by.task %>% group_by(Task.Name, year) %>% mutate(cs=cumsum(Hours))
hours.by.cat <- all.charges %>% group_by(Function.Category, year, month) %>% summarise(Hours=sum(Hours))
hours.by.cat <- hours.by.cat %>% group_by(Function.Category, year) %>% mutate(cs=cumsum(Hours))
hours.task.total <- all.charges %>% group_by(Task.Name.year) %>% summarise(Hours=sum(Hours))
hours.by.task <- all.charges %>% group_by(Task.Name, year, month) %>% summarise(Hours=sum(Hours))
hours.by.task <- hours.by.task %>% group_by(Task.Name, year) %>% mutate(cs=cumsum(Hours))
hours.by.cat <- all.charges %>% group_by(Function.Category, year, month) %>% summarise(Hours=sum(Hours))
hours.by.cat <- hours.by.cat %>% group_by(Function.Category, year) %>% mutate(cs=cumsum(Hours))
hours.task.total <- all.charges %>% group_by(Task.Name,year) %>% summarise(Hours=sum(Hours))
hours.cat.total <- all.charges %>% group_by(Function.Category.year) %>% summarise(Hours=sum(Hours))
hours.by.task <- all.charges %>% group_by(Task.Name, year, month) %>% summarise(Hours=sum(Hours))
hours.by.task <- hours.by.task %>% group_by(Task.Name, year) %>% mutate(cs=cumsum(Hours))
hours.by.cat <- all.charges %>% group_by(Function.Category, year, month) %>% summarise(Hours=sum(Hours))
hours.by.cat <- hours.by.cat %>% group_by(Function.Category, year) %>% mutate(cs=cumsum(Hours))
hours.task.total <- all.charges %>% group_by(Task.Name,year) %>% summarise(Hours=sum(Hours))
hours.cat.total <- all.charges %>% group_by(Function.Category,year) %>% summarise(Hours=sum(Hours))
hours.task.plot <- ggplot(hours.by.task, aes(month,cs)) + geom_point()
hours.cat.plot <- ggplot(hours.by.cat, aes(month,cs)) + geom_point()
hours.task.plot <- hours.task.plot  + facet_grid(vars(Task.Name),vars(year))
hours.cat.plot <- hours.cat.plot  + facet_grid(vars(Function.Category),vars(year))
print(hours.task.plot)
print(hours.cat.plot)
#ggsave(hours.task.plot, filename="hoursbyyearbytask.pdf",units="in", height=10, device="pdf")
#ggsave(hours.cat.plot, filename="hoursbyyearbyfunction.pdf",units="in", height=10, device="pdf")
print(hours.task.plot)
print(hours.cat.plot)
ggsave(hours.task.plot, filename="hoursbyyearbytask.pdf",units="in", height=10, device="pdf")
ggsave(hours.cat.plot, filename="hoursbyyearbyfunction.pdf",units="in", height=10, device="pdf")
print(hours.task.plot)
print(hours.cat.plot)
ggsave(hours.task.plot, filename="hoursbyyearbytask.pdf",units="in", height=10, device="pdf")
ggsave(hours.cat.plot, filename="hoursbyyearbyfunction.pdf",units="in", height=10, device="pdf")
print(hours.task.total)
print(hours.cat.total)
all.budget <- read_excel('../../MAGIS FY23 Budget for cuts v8.xlsx', sheet='Data Entry', skip=1)
all.budget <- read_excel('../../MAGIS FY23 Budget for cuts v8.xlsx', sheet='Data Entry', skip=1)
names(all.budget) <- make.names(colnames(all.budget))
